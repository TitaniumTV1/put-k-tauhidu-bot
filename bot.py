>>> from telegram import Update
... from telegram.ext import Application, MessageHandler, filters, ContextTypes
... 
... TOKEN = "8228754936:AAG6zuPPPBxG5Ljc5MHazuCb3AhiSdTtc84"
... ADMIN_ID = 7714575966
... 
... # —Å–≤—è–∑—å: id –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è -> id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
... message_map = {}
... 
... 
... # üì© –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
... async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
...     if update.effective_user.id == ADMIN_ID:
...         return  # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
... 
...     user_id = update.message.from_user.id
...     username = update.message.from_user.username or "–ë–µ–∑ –Ω–∏–∫–∞"
...     first_name = update.message.from_user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"
... 
...     # --- 1. –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–∞–Ω–æ–Ω–∏–º–Ω—ã–π) ---
...     await update.message.reply_text("‚úÖ –¢–≤–æ—ë –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!")
... 
...     # --- 2. –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É ---
...     header = (
...         f"üë§ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
...         f"ID: {user_id}\n"
...         f"–ò–º—è: {first_name}\n"
...         f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{username}"
...     )
... 
...     # —Å–Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å)
...     if update.message.text:
...         admin_msg = await context.bot.send_message(
...             chat_id=ADMIN_ID,
...             text=f"{header}\n\nüì© –¢–µ–∫—Å—Ç: {update.message.text}"
...         )
...     else:
        admin_msg = await context.bot.send_message(chat_id=ADMIN_ID, text=header)

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å
    message_map[admin_msg.message_id] = user_id

    # –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤–ª–æ–∂–µ–Ω–∏—è (—Ñ–æ—Ç–æ, —Ñ–∞–π–ª—ã, –∞—É–¥–∏–æ –∏ —Ç.–¥.)
    if update.message.photo:
        await context.bot.send_photo(ADMIN_ID, update.message.photo[-1].file_id, caption="üì∑ –§–æ—Ç–æ")
    if update.message.document:
        await context.bot.send_document(ADMIN_ID, update.message.document.file_id, caption="üìÑ –î–æ–∫—É–º–µ–Ω—Ç")
    if update.message.voice:
        await context.bot.send_voice(ADMIN_ID, update.message.voice.file_id, caption="üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ")
    if update.message.audio:
        await context.bot.send_audio(ADMIN_ID, update.message.audio.file_id, caption="üéµ –ê—É–¥–∏–æ")
    if update.message.video:
        await context.bot.send_video(ADMIN_ID, update.message.video.file_id, caption="üé¨ –í–∏–¥–µ–æ")
    if update.message.sticker:
        await context.bot.send_sticker(ADMIN_ID, update.message.sticker.file_id)


# üîÑ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –∞–¥–º–∏–Ω–∞
async def handle_admin_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        return

    if update.message.reply_to_message:
        reply_to_id = update.message.reply_to_message.message_id
        if reply_to_id in message_map:
            user_id = message_map[reply_to_id]

            # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞
            if update.message.text:
                await context.bot.send_message(chat_id=user_id, text=f"üì© –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∞:\n{update.message.text}")

            # –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–ª–æ–∂–µ–Ω–∏–π
            if update.message.photo:
                await context.bot.send_photo(user_id, update.message.photo[-1].file_id)
            if update.message.document:
                await context.bot.send_document(user_id, update.message.document.file_id)
            if update.message.voice:
                await context.bot.send_voice(user_id, update.message.voice.file_id)
            if update.message.audio:
                await context.bot.send_audio(user_id, update.message.audio.file_id)
            if update.message.video:
                await context.bot.send_video(user_id, update.message.video.file_id)
            if update.message.sticker:
                await context.bot.send_sticker(user_id, update.message.sticker.file_id)

            await update.message.reply_text("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
        else:
            await update.message.reply_text("‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")


def main():
    app = Application.builder().token(TOKEN).build()

    # –ª–æ–≤–∏–º –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, —Ñ–∞–π–ª—ã –∏ —Ç.–¥.)
    app.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, handle_message))

    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –∞–¥–º–∏–Ω–∞
    app.add_handler(MessageHandler(filters.ALL & filters.REPLY, handle_admin_reply))

    app.run_polling()


if _name_ == "_main_":

