import os
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes

# –±–µ—Ä–µ–º —Ç–æ–∫–µ–Ω –∏ id –∏–∑ Railway Variables
TOKEN = os.getenv("8228754936:AAG6zuPPPBxG5Ljc5MHazuCb3AhiSdTtc84")
ADMIN_ID = int(os.getenv("7714575966"))

# –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
if not TOKEN or not ADMIN_ID:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TOKEN –∏ ADMIN_ID –Ω–µ –∑–∞–¥–∞–Ω—ã –Ω–∞ Railway!")

# —Å–≤—è–∑—å —Å–æ–æ–±—â–µ–Ω–∏–π
message_map = {}


# üì© –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id == ADMIN_ID:
        return  # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    user_id = update.message.from_user.id
    username = update.message.from_user.username or "–ë–µ–∑ –Ω–∏–∫–∞"
    first_name = update.message.from_user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"

    # –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text("‚úÖ –¢–≤–æ—ë –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!")

    # —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    header = (
        f"üë§ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
        f"ID: {user_id}\n"
        f"–ò–º—è: {first_name}\n"
        f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{username}"
    )

    admin_msg = await context.bot.send_message(
        chat_id=ADMIN_ID,
        text=f"{header}\n\nüì© –¢–µ–∫—Å—Ç: {update.message.text}" if update.message.text else header
    )

    message_map[admin_msg.message_id] = user_id


# üîÑ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –∞–¥–º–∏–Ω–∞
async def handle_admin_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        return

    if update.message.reply_to_message:
        reply_to_id = update.message.reply_to_message.message_id
        if reply_to_id in message_map:
            user_id = message_map[reply_to_id]

            if update.message.text:
                await context.bot.send_message(chat_id=user_id, text=f"üì© –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∞:\n{update.message.text}")

            if update.message.photo:
                await context.bot.send_photo(user_id, update.message.photo[-1].file_id)
            if update.message.document:
                await context.bot.send_document(user_id, update.message.document.file_id)
            if update.message.voice:
                await context.bot.send_voice(user_id, update.message.voice.file_id)
            if update.message.audio:
                await context.bot.send_audio(user_id, update.message.audio.file_id)
            if update.message.video:
                await context.bot.send_video(user_id, update.message.video.file_id)
            if update.message.sticker:
                await context.bot.send_sticker(user_id, update.message.sticker.file_id)

            await update.message.reply_text("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
        else:
            await update.message.reply_text("‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")


def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, handle_message))
    app.add_handler(MessageHandler(filters.ALL & filters.REPLY, handle_admin_reply))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Railway!")
    app.run_polling()


if _name_ == "_main_":
    main()

